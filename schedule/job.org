* job

  Records every day work plan

** DONE 开发 banking service                                            :job:
   CLOSED: [2019-09-16 一 10:41]

*** DONE 封装 dwolla 库
    CLOSED: [2019-09-16 一 10:41]

**** DONE login dwolla
     CLOSED: [2019-09-10 二 11:53]

**** DONE config dwolla
     CLOSED: [2019-09-10 二 13:11]

**** DONE read source code of dwollav2
     CLOSED: [2019-08-27 二 17:39]

*** DONE update urls
    CLOSED: [2019-08-30 五 11:54]

*** DONE develop views
    CLOSED: [2019-09-12 四 10:28]

**** DONE list funding source views
     CLOSED: [2019-08-30 五 15:34]

***** DONE model list funding source api
      CLOSED: [2019-08-30 五 13:51]

      model 跟接口是一致的，所以不用再封装了。

***** DONE request handle
      CLOSED: [2019-08-30 五 15:34]

**** DONE activate/deactivate sources
     CLOSED: [2019-09-03 二 13:39]

***** model api
      
      1. update api
      2. activate/deactivate api

***** views

**** DONE remove source
     CLOSED: [2019-09-04 三 10:55]
***** wrap dwolla api

***** views


**** DONE get funding source views
     CLOSED: [2019-08-30 五 15:35]


**** DONE create transfer views
     CLOSED: [2019-09-04 三 14:32] DEADLINE: <2019-09-04 三>

***** DONE create transfer model api
      CLOSED: [2019-09-04 三 13:37]

***** DONE create view
      CLOSED: [2019-09-04 三 14:32]

**** DONE reject and cancel
     CLOSED: [2019-09-04 三 18:15]

***** DONE model update status
      CLOSED: [2019-09-04 三 17:31]

***** DONE views
      CLOSED: [2019-09-04 三 18:15]

**** run the service

***** DONE define all exception we need
      CLOSED: [2019-09-06 五 13:16]

***** DONE make migrate script
      CLOSED: [2019-09-06 五 14:10]

***** DONE migrate database
      CLOSED: [2019-09-06 五 14:10]

***** DONE run and test
      CLOSED: [2019-09-09 一 10:22]

**** DONE test reject and cancel views
     CLOSED: [2019-09-09 一 11:26]

***** DONE test cancel 
      CLOSED: [2019-09-09 一 11:26]

***** DONE test reject
      CLOSED: [2019-09-09 一 11:25]

**** DONE develop and test funding source views
     CLOSED: [2019-09-12 四 09:43]

***** DONE list
      CLOSED: [2019-09-10 二 14:04]

***** DONE create
      CLOSED: [2019-09-10 二 13:49]

***** DONE info
      CLOSED: [2019-09-10 二 14:04]

***** DONE mapping and4 encoder and error
      CLOSED: [2019-09-12 四 09:40]

***** DONE transfer.update
      CLOSED: [2019-09-10 二 17:42]

***** add account data

***** DONE handle time
      CLOSED: [2019-09-11 三 09:57]

***** DONE handle removed
      CLOSED: [2019-09-11 三 16:14]

*** DONE account and dwolla mapping 
    CLOSED: [2019-09-14 六 10:10]

**** DONE model
     CLOSED: [2019-09-12 四 14:05]

***** DONE update protos
      CLOSED: [2019-09-12 四 11:00]

***** DONE define models
      CLOSED: [2019-09-12 四 14:05]

***** DONE define api
      CLOSED: [2019-09-12 四 14:05]

**** DONE views
     CLOSED: [2019-09-13 五 13:32]

**** DONE account document
     CLOSED: [2019-09-14 六 10:03]

*** DONE link 
    CLOSED: [2019-09-14 六 15:41]

**** DONE 返还的 url
     CLOSED: [2019-09-14 六 15:41]

**** DONE 模板 view 函数
     CLOSED: [2019-09-14 六 14:16]

**** DONE tempelate
     CLOSED: [2019-09-14 六 14:16]

*** DONE create funding source
    CLOSED: [2019-09-16 一 10:41]

** 测试 banking service

*** 测试确定 dwolla 返回的各种信息。

*** 测试 link 接口以及返回的页面。

但是现在如果没有 dwolla 跟 customer 对应的关系，那么我们就没有办法去做下一步啊。
所以要先增加一个创建 customer 的接口。然后在我们这边先调用了。
总算把 account 的数据搞进去了。

*** DONE 创建 funding source 的逻辑
    CLOSED: [2019-09-18 三 10:39]

首先验证用户 account， 然后用用户的 account 信息创建客户的 funding source
然而我们其实是需要先创建 customer 的。先检查是否有 dwolla customer 然后如果没有，就创建吧

*** DONE rebase 
    CLOSED: [2019-09-18 三 14:28]

**** DONE 先把 commit 数处理掉
     CLOSED: [2019-09-18 三 14:21]

**** DONE 再跟踪上游
     CLOSED: [2019-09-18 三 14:28]

*** IN-PROGRESS 从头检视，确认各种概念的问题

**** DONE transfer 的 id 问题：dwolla 会生成一个 id， WIRE 会采用自己的 id
     CLOSED: [2019-09-20 五 13:21]

dwolla 生成的 id 写入 upstream_id

**** amount, requested_amount, fee 这几个量中间的关系

目前是把 requested_amount 作为 amount 使用， fee 是直接保存。

**** dwolla 接口的异常处理

所有 dwolla 接口如果不是正常返回，都是抛出异常这就很烦了，不知道是不是该在 dwolla.py 里面封装异常。

**** cancel/reject 这两个请求，是否跟 dwolla 有关

**** model 层的错误处理

get 不到的时候，会抛出异常，这种异常应该在哪里处理？其实本身 Model 就有对应的 DoesNotExist 的。所以看是放在哪里去处理了。

**** DONE 通过页面创建一个 funding source
     CLOSED: [2019-09-20 五 15:30]

流程我走过了，但是在最后一步卡住了。

**** DONE rebase
     CLOSED: [2019-09-20 五 15:16]

** customer 接口

*** DONE 创建的 customer 是哪一种
    CLOSED: [2019-09-24 二 11:13]
    
    VerifiedPersonalCustomer

*** DONE upstream status 有问题
    CLOSED: [2019-09-24 二 11:13]

*** IN-PROGRESS test create customer api

