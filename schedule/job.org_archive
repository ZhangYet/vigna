#    -*- mode: org -*-


Archived entries from file /Users/dantezhang/Repos/vigna/schedule/job.org


* DONE review 490 commit                                                :job:
  CLOSED: [2019-08-19 一 18:07] DEADLINE: <2019-08-20 二>
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-09-09 一 09:58
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


Archived entries from file /Users/dantezhang/Repos/vigna/schedule/job.org


* DONE run cerberus                                                     :job:
  CLOSED: [2019-08-23 五 13:09]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-09-09 一 09:58
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


Archived entries from file /Users/dantezhang/Repos/vigna/schedule/job.org


* DONE read dwolla document                                             :job:
  CLOSED: [2019-08-22 四 10:30] DEADLINE: <2019-08-20 二>
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-09-09 一 09:58
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

  - [[https://developers.dwolla.com/resources/bank-transfer-workflow/processing-times.html][process]]
  - [[https://developers.dwolla.com/guides/][guides]]
  - [[https://developers.dwolla.com/resources/][api basic]]
  - [[https://docs.dwolla.com/#introduction][api docs]]


Archived entries from file /Users/dantezhang/Repos/vigna/schedule/job.org


* DONE read source code of cerberus and msscore                         :job:
  CLOSED: [2019-08-27 二 10:53]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-09-09 一 09:58
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

** DONE read a cerberus view function
   CLOSED: [2019-08-23 五 17:07]

** DONE read msscore
   CLOSED: [2019-08-26 一 15:08]

** DONE read mssapi
   CLOSED: [2019-08-27 二 10:52]

** DONE 再过一次 bank service 设计文档
   CLOSED: [2019-08-27 二 10:52]


Archived entries from file /Users/dantezhang/Repos/vigna/schedule/job.org


* DONE read dwolla 接入文档                                             :job:
  CLOSED: [2019-08-22 四 13:29]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-09-09 一 09:58
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* TODO rebase from upstream
  DEADLINE: <2019-09-10 二 +1d>
  :PROPERTIES:
  :LAST_REPEAT: [2019-09-09 一 10:22]
  :ARCHIVE_TIME: 2019-09-10 二 09:31
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/开发 banking service
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: TODO
  :ARCHIVE_ITAGS: job
  :END:

  - State "DONE"       from "WAITING"    [2019-09-09 一 10:22]
  - State "DONE"       from "WAITING"    [2019-09-09 一 10:00]
  - State "DONE"       from "WAITING"    [2019-09-09 一 10:00]
  - State "DONE"       from "WAITING"    [2019-09-06 五 10:47]
  - State "DONE"       from "WAITING"    [2019-09-06 五 10:47]
  - State "DONE"       from "WAITING"    [2019-09-04 三 10:29]
  - State "DONE"       from "WAITING"    [2019-09-03 二 10:32]
  - State "DONE"       from "WAITING"    [2019-09-03 二 09:49]
  - State "DONE"       from "WAITING"    [2019-09-03 二 09:49]
  - State "DONE"       from "WAITING"    [2019-09-03 二 09:49]
  - State "DONE"       from "WAITING"    [2019-08-30 五 10:09]
  - State "DONE"       from "WAITING"    [2019-08-29 四 11:11]
  - State "DONE"       from "WAITING"    [2019-08-28 三 13:23]
  1. cerberus;
  2. mss;
  3. protos


* DONE read [[https://docs.djangoproject.com/en/2.2/topics/class-based-views/][class based views]]
  CLOSED: [2019-08-30 五 10:02]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-09-10 二 09:31
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/开发 banking service
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :ARCHIVE_ITAGS: job
  :END:

* DONE 开发 banking service                                             :job:
  CLOSED: [2019-09-16 一 10:41]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-09-27 五 13:46
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

** DONE 封装 dwolla 库
   CLOSED: [2019-09-16 一 10:41]

*** DONE login dwolla
    CLOSED: [2019-09-10 二 11:53]

*** DONE config dwolla
    CLOSED: [2019-09-10 二 13:11]

*** DONE read source code of dwollav2
    CLOSED: [2019-08-27 二 17:39]

** DONE update urls
   CLOSED: [2019-08-30 五 11:54]

** DONE develop views
   CLOSED: [2019-09-12 四 10:28]

*** DONE list funding source views
    CLOSED: [2019-08-30 五 15:34]

**** DONE model list funding source api
     CLOSED: [2019-08-30 五 13:51]

     model 跟接口是一致的，所以不用再封装了。

**** DONE request handle
     CLOSED: [2019-08-30 五 15:34]

*** DONE activate/deactivate sources
    CLOSED: [2019-09-03 二 13:39]

**** model api
      
     1. update api
     2. activate/deactivate api

**** views

*** DONE remove source
    CLOSED: [2019-09-04 三 10:55]
**** wrap dwolla api

**** views


*** DONE get funding source views
    CLOSED: [2019-08-30 五 15:35]


*** DONE create transfer views
    CLOSED: [2019-09-04 三 14:32] DEADLINE: <2019-09-04 三>

**** DONE create transfer model api
     CLOSED: [2019-09-04 三 13:37]

**** DONE create view
     CLOSED: [2019-09-04 三 14:32]

*** DONE reject and cancel
    CLOSED: [2019-09-04 三 18:15]

**** DONE model update status
     CLOSED: [2019-09-04 三 17:31]

**** DONE views
     CLOSED: [2019-09-04 三 18:15]

*** run the service

**** DONE define all exception we need
     CLOSED: [2019-09-06 五 13:16]

**** DONE make migrate script
     CLOSED: [2019-09-06 五 14:10]

**** DONE migrate database
     CLOSED: [2019-09-06 五 14:10]

**** DONE run and test
     CLOSED: [2019-09-09 一 10:22]

*** DONE test reject and cancel views
    CLOSED: [2019-09-09 一 11:26]

**** DONE test cancel 
     CLOSED: [2019-09-09 一 11:26]

**** DONE test reject
     CLOSED: [2019-09-09 一 11:25]

*** DONE develop and test funding source views
    CLOSED: [2019-09-12 四 09:43]

**** DONE list
     CLOSED: [2019-09-10 二 14:04]

**** DONE create
     CLOSED: [2019-09-10 二 13:49]

**** DONE info
     CLOSED: [2019-09-10 二 14:04]

**** DONE mapping and4 encoder and error
     CLOSED: [2019-09-12 四 09:40]

**** DONE transfer.update
     CLOSED: [2019-09-10 二 17:42]

**** add account data

**** DONE handle time
     CLOSED: [2019-09-11 三 09:57]

**** DONE handle removed
     CLOSED: [2019-09-11 三 16:14]

** DONE account and dwolla mapping 
   CLOSED: [2019-09-14 六 10:10]

*** DONE model
    CLOSED: [2019-09-12 四 14:05]

**** DONE update protos
     CLOSED: [2019-09-12 四 11:00]

**** DONE define models
     CLOSED: [2019-09-12 四 14:05]

**** DONE define api
     CLOSED: [2019-09-12 四 14:05]

*** DONE views
    CLOSED: [2019-09-13 五 13:32]

*** DONE account document
    CLOSED: [2019-09-14 六 10:03]

** DONE link 
   CLOSED: [2019-09-14 六 15:41]

*** DONE 返还的 url
    CLOSED: [2019-09-14 六 15:41]

*** DONE 模板 view 函数
    CLOSED: [2019-09-14 六 14:16]

*** DONE tempelate
    CLOSED: [2019-09-14 六 14:16]

** DONE create funding source
   CLOSED: [2019-09-16 一 10:41]


* 测试 banking service                                                  :job:
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-09-27 五 13:46
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :END:

** 测试确定 dwolla 返回的各种信息。

** 测试 link 接口以及返回的页面。

但是现在如果没有 dwolla 跟 customer 对应的关系，那么我们就没有办法去做下一步啊。
所以要先增加一个创建 customer 的接口。然后在我们这边先调用了。
总算把 account 的数据搞进去了。

** DONE 创建 funding source 的逻辑
   CLOSED: [2019-09-18 三 10:39]

首先验证用户 account， 然后用用户的 account 信息创建客户的 funding source
然而我们其实是需要先创建 customer 的。先检查是否有 dwolla customer 然后如果没有，就创建吧

** DONE rebase 
   CLOSED: [2019-09-18 三 14:28]

*** DONE 先把 commit 数处理掉
    CLOSED: [2019-09-18 三 14:21]

*** DONE 再跟踪上游
    CLOSED: [2019-09-18 三 14:28]

** IN-PROGRESS 从头检视，确认各种概念的问题

*** DONE transfer 的 id 问题：dwolla 会生成一个 id， WIRE 会采用自己的 id
    CLOSED: [2019-09-20 五 13:21]

dwolla 生成的 id 写入 upstream_id

*** amount, requested_amount, fee 这几个量中间的关系

目前是把 requested_amount 作为 amount 使用， fee 是直接保存。

*** dwolla 接口的异常处理

所有 dwolla 接口如果不是正常返回，都是抛出异常这就很烦了，不知道是不是该在 dwolla.py 里面封装异常。

*** cancel/reject 这两个请求，是否跟 dwolla 有关

*** model 层的错误处理

get 不到的时候，会抛出异常，这种异常应该在哪里处理？其实本身 Model 就有对应的 DoesNotExist 的。所以看是放在哪里去处理了。

*** DONE 通过页面创建一个 funding source
    CLOSED: [2019-09-20 五 15:30]

流程我走过了，但是在最后一步卡住了。

*** DONE rebase
    CLOSED: [2019-09-20 五 15:16]


* customer 接口                                                         :job:
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-09-27 五 13:46
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :END:

** DONE 创建的 customer 是哪一种
   CLOSED: [2019-09-24 二 11:13]
    
   VerifiedPersonalCustomer

** DONE upstream status 有问题
   CLOSED: [2019-09-24 二 11:13]

** DONE test create customer api
   CLOSED: [2019-09-26 四 13:25]


* 重新填补逻辑                                                          :job:
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-09-27 五 13:46
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :END:

** IN-PROGRESS 定义对应的错误

** IN-PROGRESS 填补对应的逻辑

** DONE 在 api 定义对应生成 id 的函数
   CLOSED: [2019-09-26 四 13:34]

* DONE rebase 提 PR
  CLOSED: [2019-10-03 四 14:37]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-03 四 14:38
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

  但实际 jiadeng 也没有什么新的做法。我还是要从头开始数理流程

* DONE 测试 banking service                                             :job:
  CLOSED: [2019-10-03 四 14:44]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-03 四 14:44
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

** DONE copy 一个新的 account 以及对应的 correspondent 数据到库里
   CLOSED: [2019-09-27 五 14:22]

** TODO 创建 dwolla customer 附带 list 和 get 的测试

** TODO create funding source 顺便测试 removed 再 create

** TODO create transfer


* DONE dwolla webhook 的问题
  CLOSED: [2019-10-03 四 14:44]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-03 四 14:44
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

  现在剩下一个问题，就是资源的状态问题。

** DONE 初始化的时候检查有没有订阅，如果没有，创建订阅
   CLOSED: [2019-09-28 六 14:37]

** DONE webhook scription 的 model
   CLOSED: [2019-09-28 六 15:46]

原来早就写了，尴尬。

** DONE 设计 webhook 类
   CLOSED: [2019-10-03 四 14:44]

最大的问题是：在回调的时候，我们才知道具体生成了什么 topic，然后要根据 topic 执行具体的工作。

现在问题是：我不知道回调是怎样的，应该是一个事件一个 topic？还是一个事件多个 topic？感觉不用多应该考虑这个，实际上应该靠 topic 来处理资源的状态变化。

所以还是直接上吧。

上周已经写了基础蓝图了，现在就，先去掉多余的 status 字段，然后根据事件，写对应的 update resource 吧。

已经去掉了。

** DONE 处理 sandbox 无法连上的 exception
   CLOSED: [2019-09-28 六 14:37]

其实也不需要大动干戈。


* DONE 重新定义状态
  CLOSED: [2019-10-03 四 19:27]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-07 一 10:25
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

* DONE 处理 fix simulator 的文档
  CLOSED: [2019-10-08 二 15:22]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-08 二 15:24
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

** DONE 安装 nodejs
   CLOSED: [2019-10-08 二 11:24]

** DONE 拉 repo 到虚机，部署并修改 readme 
   CLOSED: [2019-10-08 二 14:56]
    
   raml-1-parser 返回了一个错。其实是没有初始化 submodule 而已。



* DONE review 后的修改
  CLOSED: [2019-10-09 三 16:29]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-09 三 16:29
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

** DONE 合并 models 以及将 models 合并之后的影响处理掉
   CLOSED: [2019-10-08 二 16:36]

** DONE 处理枚举，统一成 string
   CLOSED: [2019-10-09 三 10:26]

** DONE 处理默认值
   CLOSED: [2019-10-09 三 10:26]


* DONE 寄快递
  CLOSED: [2019-10-09 三 16:29]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-09 三 16:29
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

  没带身份证，明天再寄。


* DONE rebase from develop
  CLOSED: [2019-10-09 三 16:35]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-09 三 18:19
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

* DONE 资源状态图
  CLOSED: [2019-10-11 五 13:41]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-12 六 13:38
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

** DONE customer
   CLOSED: [2019-10-10 四 14:54]

** DONE funding_source
   CLOSED: [2019-10-11 五 10:18]

** DONE transfer
   CLOSED: [2019-10-11 五 10:18]

* IN-PROGRESS 测试接口
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-14 一 10:20
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: IN-PROGRESS
  :END:

** DONE 增加顾客
   CLOSED: [2019-10-08 二 11:24]

*** DONE 先复制顾客数据过来吧。
    CLOSED: [2019-10-07 一 10:56]

** DONE 测试增加顾客之后的回调
   CLOSED: [2019-10-08 二 11:24]

** add funding source

** add funding source 之后的回调

** 发起 transfer 

** transfer 之后的回调


* DONE 处理 fix simulator 的日志问题
  CLOSED: [2019-10-14 一 10:20]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-17 四 13:42
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/fix simulator
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

  原则上我希望能实现像 dicloud 那样带有 trace id 但是这样我要把 context 一层一层传进去，改动会有点大。而且 lua 那层没有 ctx

  luaVm 这边我就用


* DONE 提供更简易的 order 创建和 exec report 发送功能
  CLOSED: [2019-10-14 一 17:15]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-17 四 13:42
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/fix simulator
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* DONE 写文档
  CLOSED: [2019-10-16 三 15:18]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-17 四 13:42
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/fix simulator
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* DONE 修改一些 lua 函数的命名并重新处理单元测试
  CLOSED: [2019-10-16 三 15:18]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-17 四 13:42
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/fix simulator
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* DONE ensure all field in exec report
  CLOSED: [2019-10-16 三 18:02]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-23 三 09:51
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/fix simulator
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

** DONE orderID    
   CLOSED: [2019-10-16 三 15:22]

** clOrderID

** DONE execID
   CLOSED: [2019-10-16 三 15:22]

** DONE execType
   CLOSED: [2019-10-16 三 15:22]

** DONE ordStatus
   CLOSED: [2019-10-16 三 15:22]

** DONE ordType
   CLOSED: [2019-10-16 三 15:27]

** DONE lastShares
   CLOSED: [2019-10-16 三 15:23]

** DONE lastPx
   CLOSED: [2019-10-16 三 15:28]

** DONE leavesQty
   CLOSED: [2019-10-16 三 15:24]

** DONE cumQty
   CLOSED: [2019-10-16 三 15:27]

** DONE averagePx
   CLOSED: [2019-10-16 三 15:27]


* DONE 重新设计 order 对象
  CLOSED: [2019-10-19 六 16:08]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-23 三 09:51
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/fix simulator
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

** DONE 增加 field    
   CLOSED: [2019-10-17 四 09:56]

   1. OrderQty
   2. AvgPx
   3. CumQty 累计成交
   4. LeavesQty 剩余未成交就用 QrderQty 跟 CumQty 计算吧

** DONE 将 orderManager 改成一个单例
   CLOSED: [2019-10-17 四 15:35]

   这样子会变得非常尴尬，因为 script 也涉及了 db 的设置。

   将 dbConfig 放到 Config 里面。

   model 模块自己初始化 model 并根据 isMock 初始化实例（决定是 mock 还是 db）。

   scriptModel 也需要这种重构，但是现在只能先搁下了。


** DONE order 状态变化
   CLOSED: [2019-10-17 四 18:43]

   我们现在有一个 OrderStatus 的转换表。以及对应的优先级表。但是真的好难抽象啊。

*** filled

    1. reject 发送一个 rejected 的 exec report；
    2. New -> Partial Fill -> Fill （当然可能直接变成 fill）；

*** Part-filled order done for day

    1. Partial File -> Done For Day；

*** Cancel a zero-filled order

    1. 如果拒绝，那么发送 cancel reject；
    2. New -> Pending Cancel -> Canceled
    3. ClOrderId 会改变

*** Cancel part-filled order executions while cancel request is active

    重点是：execution 依然可以执行，但是状态应该是 Pending Cancel 。

*** Order become filled before a cancel is accepted

    这时候，应该发送 Cancel Reject, 并令 CxlRejectReason = 0 。


*** cancel/replace request increase order qty (zero-filled)

    改 OrderQty 并改状态为 replace，改 ClOrdId。

*** cancel/replace request increase order qty (part-filled)

    Partial filled 的状态比 Pending replace 高。




** DONE order 不需要暴露 save 操作，应该在发送 report 的时候处理
   CLOSED: [2019-10-17 四 18:43]

   钻了牛角尖了，filled 的时候 ClOrdId 没有变，用 ClOrdId 查就可以了。

** DONE 修改 model 定义
   CLOSED: [2019-10-18 五 18:39]

   symbol 和 side 应该往 model 里面写，因为它们可能用来做筛选条件，但是 cumQty 之类的就不必了。 orderQty 也需要保存，因为可能会变动。

   可以自动生成。

** DONE 过来的 msg 里面的 price 要怎么设置
   CLOSED: [2019-10-19 六 16:02]

   limit 订单的时候需要使用 price，需要使用 price。

** DONE 写新文档
   CLOSED: [2019-10-21 一 11:04]

** DONE 发送 new report
   CLOSED: [2019-10-21 一 11:31]


* DONE bug fix: 匹配到了已经删除的 script
  CLOSED: [2019-10-21 一 19:40]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-23 三 09:51
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/fix simulator
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

  这有尴尬，因为匹配的时候只看 SessionId 和 MsgType。





* DONE panic 后自动回复
  CLOSED: [2019-10-21 一 19:40]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-23 三 09:51
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/fix simulator
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* DONE 发 UAT
  CLOSED: [2019-10-23 三 18:29]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-23 三 18:32
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/fix simulator
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

** DONE rebase
   CLOSED: [2019-10-23 三 13:58]

** DONE 数据库
   CLOSED: [2019-10-23 三 13:58]

** DONE 配置
   CLOSED: [2019-10-23 三 16:42]

** DONE 写 RT
   CLOSED: [2019-10-23 三 18:29]



* DONE 处理 503 的问题
  CLOSED: [2019-10-24 四 18:17]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-25 五 13:59
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/fix simulator
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

* DONE 将 scriptManagement 改成单例
  CLOSED: [2019-10-25 五 16:43]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-25 五 16:48
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/fix simulator
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* DONE 定义询价的流信息，将 quote 改成一个单例，有一个 channel 管理自己的生存。
  CLOSED: [2019-10-25 五 16:43]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-25 五 16:48
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/fix simulator
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

  我准备传一个 chan 进入读取 Quote，然后 err 处理就算了。

  原则上我应该要让 write 这边负责关闭 channel，这样问题会比较复杂，我需要传入另外一个 channel 去通知这个 go routine 需要关闭？或者应该把 quote 部分接口实现成一个单例，自己管理生存期。


* DONE 读 laser 的代码
  CLOSED: [2019-10-26 六 15:04]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-28 一 11:50
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/fix simulator
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* DONE order 的模拟
  CLOSED: [2019-10-28 一 11:51]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-28 一 12:07
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/fix simulator/写模拟
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* DONE 资源状态的检查
  CLOSED: [2019-10-30 三 15:48]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-30 三 15:49
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/cerberus
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* DONE 接入 cashier
  CLOSED: [2019-10-30 三 15:48]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-30 三 15:49
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/cerberus
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* DONE rebase
  CLOSED: [2019-10-28 一 19:55]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-10-30 三 15:49
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/cerberus
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:



* DONE 重新设计处理事件的部分
  CLOSED: [2019-10-31 四 17:03]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-04 一 15:26
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/cerberus
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

  现在有个问题，因为其他的资源只需要更新资源的状态就可以了，但是 transfer，需要跟 cashier 交互。

  第一个需要抽象的地方就是，整个过程，我们要怎样抽象——

  1. 收到事件；
  2. 更新资源状态；
  3. 更新 cashier (但这只有 transfer 需要，所以要怎样命名这个阶段？)；

  第二个需要抽象的地方，transfer 有情况：

  1. 失败（不需要更新 cashier）;
  2. 成功，需要更新 cashier；
  3. 成功之后失败，需要更新 cashier；
       
  因为失败就是最后的状态了，所以我们只需要检查失败事件之后有没有成功就好了。

  事件处理，我先模仿 quickfix 的 state 流转，做成一个 pipeline 式的处理方案（但是调用者不需要操心哪个 state 先哪个 state 后）。

  设计一个类，所有类，这个类暴露一个 api， process()，封装所有流程，并且不返回结果，只抛出异常。process() 封装其他私有函数，每个私有函数都返回 self。



* DONE 处理 transfer 的逻辑
  CLOSED: [2019-11-01 五 18:09]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-04 一 15:26
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/cerberus
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

  1. 查 transfer；
  2. 根据 topic 处理 transfer；
  3. 调用 cashier；

  其实因为 cashiser 肯定是在 save 之后，所以资源肯定是能找到的。



* DONE 写一个模拟 dwolla 回调的工具
  CLOSED: [2019-11-03 日 17:35]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-04 一 15:26
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/cerberus
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* DONE 处理 log，过滤掉 login 和心跳的 msg，然后打印订单相关的 msg 
  CLOSED: [2019-11-05 二 14:43]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-05 二 16:10
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/fix simulator
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* DONE rebase cerberus
  CLOSED: [2019-11-05 二 14:49]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-05 二 16:11
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/cerberus
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* DONE 删除 sandbox 里面的 customer
  CLOSED: [2019-11-05 二 16:06]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-05 二 16:11
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/cerberus
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

  这个好像做不到，算了，试试先 deactivate.


* DONE rebase mss
  CLOSED: [2019-11-05 二 14:43]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-05 二 16:11
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/cerberus
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* DONE 重新创建 customer 数据
  CLOSED: [2019-11-05 二 16:41]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-05 二 16:43
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/cerberus
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* DONE 处理 review 的意见
  CLOSED: [2019-11-06 三 16:42]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-08 五 18:32
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/cerberus
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* 创建 account
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-08 五 18:32
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/cerberus
  :ARCHIVE_CATEGORY: job
  :END:

需要重新同步数据库


* DONE cerberus
  CLOSED: [2019-11-15 五 10:28]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-15 五 10:28
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

** DONE 先把服务起起来
   CLOSED: [2019-11-09 六 15:29]

** DONE 增加外部调用时的 cid 对应的检查
   CLOSED: [2019-11-12 二 17:14]

因为入参的不同，每个 view 必须实现自己的检查 decorator

** DONE process_at 增加
   CLOSED: [2019-11-12 二 19:17]

** DONE init status
   CLOSED: [2019-11-13 三 19:34]

*** DONE 生成新的 proto 
    CLOSED: [2019-11-13 三 18:34]

*** IN-PROGRESS 改代码

* banking service 测试
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-19 二 18:24
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :END:

** DONE 解答银霜的问题
   CLOSED: [2019-11-18 一 10:20]


* DONE 校对第13章
  CLOSED: [2019-11-12 二 11:01]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-20 三 11:37
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/翻译
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* 提供一个 web 接口
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-21 四 11:09
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/fix simulator/提供一个接口，查询那些 session 连接上了，每个连接的 msg id 是多少
  :ARCHIVE_CATEGORY: job
  :END:



* WAITING fix simulator
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-21 四 11:09
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: WAITING
  :END:

** WAITING 写单测

** 提供一个接口，查询那些 session 连接上了，每个连接的 msg id 是多少

*** 参考 quickfix 的 c++ 文档


* DONE rebase
  CLOSED: [2019-11-17 日 23:55]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-21 四 11:20
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/翻译/补完我需要处理的章节
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* DONE 列出需要补全的部分
  CLOSED: [2019-11-21 四 11:10]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-21 四 11:20
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/翻译/补完我需要处理的章节
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

应该还差 14 章，估计林枫没有搞，自己来吧，15章的更新部分没有做。

竟然就只有 15 章还没有搞，还有16小节。


* DONE 解决编译的问题
  CLOSED: [2019-11-18 一 11:03]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-21 四 11:20
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/翻译/补完我需要处理的章节
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

在 `index.Rmd` 里面加入

```
r = getOption("repos")
r["CRAN"] = "http://cran.us.r-project.org"
options(repos = r)
install.packages("weatherData")
```

即可。


* DONE [[https://16financial.atlassian.net/browse/MSS-1057][500]]
  CLOSED: [2019-11-22 五 14:10]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-25 一 13:41
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/处理 jira 上的问题
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* DONE [[https://16financial.atlassian.net/browse/MSS-1058][Link ACH]]
  CLOSED: [2019-11-23 六 14:24]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-25 一 13:41
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/处理 jira 上的问题
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

需要等卓允提供对外的 ip，这个就明天做吧。另外需要补充订阅的逻辑：如果没有设定的订阅 url，那么我们就重新订阅一发。


* DONE 测试 ssn 能否重复
  CLOSED: [2019-11-22 五 16:08]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-25 一 13:41
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/处理 jira 上的问题
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

能

* DONE 处理 jira 上的问题
  CLOSED: [2019-11-27 三 10:36]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-29 五 10:37
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

** DONE [[https://16financial.atlassian.net/browse/MSS-1056][后端实现]]
   CLOSED: [2019-11-27 三 10:35]

** DONE 处理 token 过期的情况
   CLOSED: [2019-11-26 二 14:26]



* DONE 补完 jira 的 issue
  CLOSED: [2019-11-26 二 11:07]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-11-29 五 10:37
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* DONE 修 bug
  CLOSED: [2019-12-02 一 16:27]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-12-02 一 16:35
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

** DONE 处理报错的问题
   CLOSED: [2019-11-30 六 13:53]

需要定义 banking 相关的错误，并确定错误码。

dwollaCustomers:

1. CreateCustomerView: 找不到 account, Invalid param 吧；

funding_source:

1. AccountDwolla not exits: invalid param;
2. Acitvate 等，找不到对应的 funding_source, invalid param;
3. remove 等，也是 invalid param；
4. 403 那个就是权限问题了；

就把 invalid param 映射过去就好了吧。

** DONE topic 问题
   CLOSED: [2019-12-02 一 16:27]

*** DONE 将所有的 topic 添加到 webhook
    CLOSED: [2019-11-30 六 14:53]

*** 处理 topic

如果不知道，那么就不处理了，但是 webhook 本身要保存下来。

*** 处理 funding_source

从 funding_source 的回调中找到 customer 的 id，然后找到 customer 对应的表，再创建 funding_source.

* DONE 首先想办法把之前的逻辑给上了吧，还要检查哪些修了哪些没修
  CLOSED: [2019-12-04 三 10:49]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-12-04 三 10:49
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/cerberus
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

** DONE 先把 funding source 状态的结论在 jira 上同步
   CLOSED: [2019-12-02 一 16:52]

** DONE 还有 accountDwolla list 接口的参数问题。
   CLOSED: [2019-12-03 二 11:04]

** DONE remove 操作问题
   CLOSED: [2019-12-03 二 11:05]

** DONE 修复 code review 的问题
   CLOSED: [2019-12-03 二 14:33]

mss 的 code review 修复了

cerberus 的 code review 修复了

** IN-PROGRESS 自测

*** DONE 修改测试环境的代码
    CLOSED: [2019-12-03 二 14:46]

*** DONE 测试 remove funding source
    CLOSED: [2019-12-03 二 14:46]

*** DONE 测试 iav
    CLOSED: [2019-12-03 二 16:55]


* 并发问题
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-12-06 五 10:46
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/cerberus
  :ARCHIVE_CATEGORY: job
  :END:

** 添加字段（以及 unique）

** 添加 api


* transfer 问题
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-12-09 一 21:45
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/cerberus
  :ARCHIVE_CATEGORY: job
  :END:


* DONE 整理 jira
  CLOSED: [2019-12-07 六 14:18]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-12-09 一 21:45
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/cerberus
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

* DONE chap 15
  CLOSED: [2019-12-08 日 19:48]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-12-09 一 21:45
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/翻译/补完我需要处理的章节/开始补完
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

R basic 就是 R 的基本功能，不是绘图。

level 还是统一翻译成水平吧。

置信区间那一节要怎样处理？

先歇一段吧。这一章把我整死了。


* DONE chap 14
  CLOSED: [2019-12-03 二 18:12]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-12-09 一 21:45
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/翻译/补完我需要处理的章节/开始补完
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

想不到这一章我搞定了，赞美我自己。


* DONE chap 12
  CLOSED: [2019-12-09 一 21:45]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-12-09 一 21:45
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/翻译/补完我需要处理的章节/开始补完
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* DONE 补充 15 章的图
  CLOSED: [2019-12-09 一 21:45]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-12-09 一 21:45
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/翻译/补完我需要处理的章节/开始补完
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* IN-PROGRESS 开始补完
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-12-09 一 21:45
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/翻译/补完我需要处理的章节
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: IN-PROGRESS
  :END:


* DONE 补完我需要处理的章节
  CLOSED: [2019-12-09 一 21:46]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-12-09 一 21:46
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/翻译
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:


* 发初稿
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-12-11 三 11:20
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/翻译
  :ARCHIVE_CATEGORY: job
  :END:

yanghailing@ptpress.com.cn


* DONE 整理已经做的 issue
  CLOSED: [2019-12-11 三 14:29]
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-12-11 三 19:42
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job/cerberus
  :ARCHIVE_CATEGORY: job
  :ARCHIVE_TODO: DONE
  :END:

meng xiao cashier 的重构还没有完成，所以真的是进退两难啊。

* cerberus
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-12-13 五 10:19
  :ARCHIVE_FILE: ~/Repos/vigna/schedule/job.org
  :ARCHIVE_OLPATH: job
  :ARCHIVE_CATEGORY: job
  :END:

