** 线程：线程安全与每线程存储

*** 线程安全

实现线程安全有多种方式，我们提及如下两种：

1. 将函数与互斥量关联使用，这会有性能问题，毕竟这个函数就串行了；
2. 将共享变量与互斥量关联使用（其实就是将要串行的粒度缩小到某个具体的临界区）；

可重入函数避免使用全局和静态变量，无需加锁即可线程安全。

*** 一次性初始化

~pthread_once()~ 无论多少线程调用 ~pthread_once()~,也只会执行一次。

*** 线程持有数据

这玩意儿太复杂了，跳过。

*** 线程局部存储

带有 ~__thread~ 说明符的变量，每个线程都会拥有一份对变量的拷贝。直到线程终止，自动释放这一存储。

#+BEGIN_QUOTE
本章讨论了两种大致相当的编程技术——线程特有数据和线程局部存储——可在无需改变函数接口定义的情况下保障不安全函数的线程安全。这两种技术均允许函数分配持久的、基于线程的存储。

[德]Michael Kerrisk. Linux/UNIX系统编程手册(上、下册) (Chinese Edition) (Kindle 位置 12060-12062). Kindle 版本. 
#+END_QUOTE

