** 进程组、会话和作业控制

*** 概述

进程组就是一组拥有相同进程组 id 的进程。每个进程组有一个首进程，它的进程 id 就是进程组 id。

进程组的声明周期从首进程创建新进程开始，到所有进程都退出为止。进程可能因为加入其他进程组而退出。

会话是一组进程组的集合。会话 id 是首先创建会话的进程 id。

在任一时刻，会话中的其中一个进程组会成为终端的前台进程组，其他进程组会成为后台进程组。只有前台进程组中的进程才能从控制终端中读取输入。

#+BEGIN_QUOTE
从shell中发出的每个命令或通过管道连接的一组命令都会导致一个或多个进程的创建，并且shell会把所有这些进程都放在一个新进程组中。

[德]Michael Kerrisk. Linux/UNIX系统编程手册(上、下册) (Chinese Edition) (Kindle 位置 12882-12884). Kindle 版本. 
#+END_QUOTE

*** 进程组

查询进程组 id 的调用： ~getpgrp()~ 。

修改进程组 id 的调用： ~setpgrpid()~ 。 注意修改进程组 id 有多种限制。

至于这两个名字为什么不一致，是有历史原因的。

*** 会话

查看会话 id: ~getsid()~ 。

但是 ~setsid()~ 就只能在首进程中创建新会话。

*** 控制终端和控制进程

*** 前台和后台进程组

前台进程组是唯一能自由读写控制终端的进程组。终端会将信号发给进程组的所有成员。

*** SIGHUP 信号

当一个控制进程失去其终端连接之后，内核会向其发送一个SIGHUP信号来通知它这一事实。

**** 在 shell 中处理 SIGHUP 信号

nohup 可以使进程对 SIGHUP 免疫。

*** 作业控制

总觉得这玩意用得少，跳过了。
