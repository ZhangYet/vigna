** POSIX 信号量

*** 概述

1. 命名信号量；
2. 未命名信号量——通过内存位置访问（进程间共享时需要放在共享内存处）；

*** 命名信号量

注意命名信号量在打开的时候就会初始化。在 Linux 中信号量被实现为小型 POSIX 共享内存对象，挂在 /dev/shm 下面（命名规则为 sem.name）是内核持久的。

*** 打开信号量

~sem_open()~ 跟其他的打开信号量操作一样，可以打开已有的信号量或者创建新的信号量，如果需要创建新的信号量，那么需要指定 mode 或者 flag。

奇怪的是：

#+BEGIN_QUOTE
SUSv3声称当在sem_open()的返回值指向的sem_t变量的副本上执行操作（sem_post()、sem_wait()等）时结果是未定义的。

[德]Michael Kerrisk. Linux/UNIX系统编程手册(上、下册) (Chinese Edition) (Kindle 位置 19150-19151). Kindle 版本. 
#+END_QUOTE

就是不能这个指针赋值给别的变量。真是奇怪。

*** 关闭信号量

关闭信号量并不会删除信号量。删除用 ~sem_unlink()~ 。

*** 操作信号量

与 System V 的区别：
1. 每次只能操作一个信号量；
2. 只能+1或-1，减少了复杂性；
3. POSIX 提供了一个 wait_for_zero 的功能；

~sem_wait()~ 会减少信号量的值——我主要想吐槽这个命名跟行为其实比较不搭边。

~sem_post()~ 对应的章节名应该是「释放信号量」。

*** 未命名信号量

用 ~sem_init()~ 来初始化，用 ~sem_destroy()~ 来销毁。

还得把一个 sem_t* 传给 ~sem_init()~ 的，如果要进程间共享，这个指针还需要是共享内存空间的指针。线程共享的未命名信号量是进程持久的，进程共享的则是跟所处的共享内存一样。

*** 与其他同步技术比较


