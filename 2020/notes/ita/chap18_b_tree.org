** B 树

*** B 树定义

B 树的定义比较复杂：

1. 节点定义：
   
   1. n[x] 当前节点的 key 数量；

   2. n[x] 个 key；

   3. leaf[x] 是否叶节点；

2. 每个节点有指向其子女的指针；

3. 节点的 key 对各子树中的 key 加以间隔；

4. 每个叶节点有相同的高度；

5. 每个节点的 key 数量有上下界，可以用最小度数 t 表示：

   1. 每个非根节点至少有 t-1 个 key，非根内节点至少有 t 个子女；

   2. 每个节点的最多有 2t-1 个key。内节点最多有 2t 个子女；


Q: *为什么不允许B树的最小度数为1？*

A: [[https://stackoverflow.com/questions/57842805/why-b-tree-root-can-have-minimum-degree-2][FYI]], 但其实我不是很明白，先看下去吧。
其实就是说，节点里面 key 就好像墙，t - 1 堵墙可以分割出 t 个房间（忽略两边那两间）。注意分裂是树长高的唯一方式。你但凡有一堵墙都有两个房间啊。

*** 基本操作

**** search

**** insert

1. 中节点分裂：沿着根向下，遇到满的节点先分裂，这样可以在真正插入之前，保证父节点是非满的。


