* 设计问题
** 缓存设计
*** 缓存主要用在哪些场景？

*** 缓存更新策略的优劣
主要看[[https://coolshell.cn/articles/17416.html][这篇]]。
*** 缓存需要考虑的问题

1. 缓存时长；
2. 缓存失效处理（按时失效、事件失效、主动更新）；
3. 缓存键设计；
4. 缓存的内容及数据结构；
5. 缓存雪崩的处理（缓存服务器重启或者大量缓存在同一时间失效）；
6. 缓存穿透的处理（此外防止恶意访问）

*** 基本的技术选型

** 队列推拉问题

https://tech.meituan.com/2016/07/01/mq-design.html

1. 顺序问题：pull 优于 push；
2. 消息延迟与忙等： push 优于 pull；
3. 慢消费： pull 优于 pushh；
