** 虚拟内存操作

*** 改变内存保护

~mprotect()~ 改变一片内存的读写权限。

*** 内存锁

~mlock()~ 与 ~munlock()~ 将虚拟内存锁定在内存中以及对应的解锁操作。

#+BEGIN_QUOTE
之所以需要这样做的一个原因是它可以提高性能。对被锁住的分页的访问可以确保永远不会因为分页故障而发生延迟。这对于那些需要确保快速响应时间的应用程序来讲是很有用的。

[德]Michael Kerrisk. Linux/UNIX系统编程手册(上、下册) (Chinese Edition) (Kindle 位置 18505-18507). Kindle 版本. 
#+END_QUOTE

另一个原因是安全。

注意，进程终止的时候，内存锁会自动删除，内存映射被 ~munmap()~ 解除的时候。

同一进程多次加锁同一个内存区域也只会上一次锁。

*** 确认内存驻留

~mincore()~ 报告一个虚拟地址范围内，哪些分页驻留在 RAM。但它不是 SUSv3 标准（不知道 v4 是不是）
