** 内存映射

*** 概述

~mmap()~ 创建一个内存映射，分两种——文件映射，将一个文件的一部分映射到内存中；匿名映射（也可以看成总是初始化为0的虚拟文件的映射）。

进程可以通过映射同一个文件的同一部分共享内存页面。当然父进程 fork 出新进程的时候，子进程会继承内存映射的副本。

*** 其他

对共享的内存映射的修改才会反射到文件上，私有的内存映射不会。

使用共享内存 I/O 可以省下内核空间和用户空间之间的一次传输，此外还能省缓存：

#+BEGIN_QUOTE
当使用read()或write()时，数据将被保存在两个缓冲区中：一个位于用户空间，另一个位于内核空间。当使用mmap()时，内核空间和用户空间会共享同一个缓冲区。

[德]Michael Kerrisk. Linux/UNIX系统编程手册(上、下册) (Chinese Edition) (Kindle 位置 18150-18151). Kindle 版本. 
#+END_QUOTE

比较烦的是越界问题（因为内存映射必须是内存页的整数倍），内存映射比文件小：文件有部分访问不到；内存映射比文件大：比文件大的部分的修改不会写回文件。

*** 同步映射文件 

~msync()~ 显示同步内存与映射文件。居然还能异步同步。
