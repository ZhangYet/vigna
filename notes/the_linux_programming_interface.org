* [[https://book.douban.com/subject/25809330/][Linux/UNIX系统编程手册]]

** 历史和标准

** 基本概念

** 系统编程概念

*** 系统调用

    1. 系统调用将处理器从用户态切换为核心态；
    2. 系统调用的组成是固定的，有唯一的、对外不可见的数字标识；
    3. 每个系统调用都有参数规范用户空间与内核空间之间的信息传递；

       某种意义上来说，C 函数中系统调用相关的函数，都是 wrapper，它们封装了对应的系统调用，使用这些函数的时候，会有两次次用户态跟核心态的切换。

*** 库函数

*** glibc

    1. 可以用 ldd 列出依赖的库；

*** 错误处理

    少数系统调用(比如 [[http://man7.org/linux/man-pages/man2/getpriority.2.html][getpriority()]] )调用成功也会返回 -1。

*** 可移植性问题

**** 特性测试宏

     通过定义特性测试宏，暴露对应特定标准的定义。

**** 系统数据类型

*** 练习

    =reboot= 第二个参数的 magic 数值转换成十六进制之后，其实就是 Linus 和他女儿的生日，见[[https://stackoverflow.com/questions/4808748/magic-numbers-of-the-linux-reboot-system-call][这个回答]]。


** 文件 I/O

*** =open()=

    1. 因为早期的 UNIX 实现，使用 0、1和2表示 =O_RDONLY=, =O_WRONLY= 和 =O_RDWR= 所以， =O_RDWR= 不等于 =O_RDONLY | O_WRONLY=[fn:1]。
    2. 新建文件的权限会依赖于 =open()= 的参数 mode 以及进程的 umask 值和父目录的默认访问控制列表。

*** =read()=

    1. =read()= 读取的字节数少于请求的字节数的情况：靠近 **普通文件** 尾部；管道、FIFO、socket 或者终端。
    2. C 语言里面调用 =read()= 还得手动加 ='\0= 。

*** =write()=

    1. 对磁盘文件执行 I/O 操作时， =write()= 成功并不能确保数据已经写入磁盘。因为内核会缓存磁盘的 I/O 操作。

*** =close()=
    
    1. 关闭文件可能的错误：关闭未打开或者已经关闭的文件。

*** =lseek()= 改变文件偏移量

    1. 并不适用于所有文件（如管道、FIFO、socket或者终端）。
    2. =lseek()= 之后再写入，可以导致文件空洞

*** 练习

    1. 写一个 tee
    2. 复制时带空洞


** 深入探究文件 I/O

*** 原子操作和竞争条件

    1. 多进程情况下，使用 =O_CREAT= 会有竞态问题，所以加了 =O_EXCL= 这个标志位，检查文件存在和创建文件会成为一个原子操作，同理 =O_APPEND= 支持向文件尾部追加数据的原子操作。

*** 文件描述符和打开文件之间的关系

    内核维护了三个文件结构：

    1. 进程级的文件描述符表：记录了控制文件描述符操作的一组标志，对打开文件句柄的引用；
    2. 系统级的打开文件表：记录了打开文件句柄，记录了文件的偏移量、状态标志、访问模式、与信号驱动I/O相关的设置对该文件 i-node 对象的引用[fn:2]
    3. 文件系统建立的 i-node 表：记录了文件类型、记录了所有锁的指针以及文件各种属性；

    两个不同的文件描述符（进程级）指向同一个文件句柄，将共享同一个文件偏移量，无论这个两个描述符是否属于相同的进程。但文件描述符标志为进程私有，进程间互不影响。 *注意，重复打开一个文件可能获取到不同的文件句柄。*

*** =/dev/fd= 目录

    这个目录下每个文件对应打开文件描述符。 =/dev/fd/0=, =/dev/fd/1= 和 =/dev/fd/2= 对应标准输入、标准输出和标准错误。

*** 练习
    
    1. 5-2 用 =O_APPEND= 打开文件，并将文件偏移量置于文件起始处，写入数据；
    2. atomic_append[fn:3]


    

** Footnotes

[fn:3] 做成大小不一样的原因，是因为没有使用 O_APPEND 的时候，两个进程会使用相同的偏移量，一个进程会把另一个进程写的内容覆盖掉。 

[fn:2] 其实都叫文件描述符多好，非得加一个文件句柄。

[fn:1] 所以别乱用 
